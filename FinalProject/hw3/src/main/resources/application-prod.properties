# src/main/resources/application-prod.properties

# App Engine sets the PORT environment variable, Spring Boot picks it up.
# server.port=${PORT:8080} # Usually not needed to specify, Spring Boot handles PORT env var.

# Logging levels for production
logging.level.root=INFO
logging.level.com.example.hw3=INFO 
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=WARN 

# GCS Bucket Name (fetched from app.yaml env_variable)
gcs.bucket-name=${GCS_BUCKET_NAME}
gcp.project.id=${GCP_PROJECT_ID}
# Elasticsearch Configuration (fetched from app.yaml env_variables)
elasticsearch.host=${ELASTICSEARCH_HOST}
elasticsearch.port=${ELASTICSEARCH_PORT}
elasticsearch.scheme=${ELASTICSEARCH_SCHEME}
# This will be the actual secret value injected by App Engine from Secret Manager
#elasticsearch.apiKey=${ELASTICSEARCH_APIKEY_FROM_SECRET}

# Spring multipart properties (already in your main properties, ensure they are not overridden if needed)
# spring.servlet.multipart.enabled=true
# spring.servlet.multipart.max-file-size=10MB
# spring.servlet.multipart.max-request-size=10MB

# No need for spring.cloud.gcp.credentials.location in prod on App Engine
# No need for spring.cloud.gcp.project-id if GCP_PROJECT_ID env var is set or ADC works

# Disable any dev-specific beans if you used @Profile("dev") for them
# For example, if ElasticsearchConnectionTester was for dev only:
# spring.main.allow-bean-definition-overriding=true # If needed, usually not for profiles